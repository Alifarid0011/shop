<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="5681d28d-2043-4acc-890c-e34ee1c7e81c" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/../shop/go.sum" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../shop/src/api/api.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../shop/src/api/handlers/health.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../shop/src/api/routers/health.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../shop/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/../shop/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../shop/.idea/GOHCache.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../shop/.idea/GOHCache.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../shop/.idea/JetClient/state.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../shop/.idea/JetClient/state.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../shop/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../shop/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../shop/src/cmd/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/../shop/src/cmd/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../shop/src/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/../shop/go.mod" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;Alifarid0011&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="57c4fd15-5462-49fc-ae39-3fe119f4d841" />
        <option name="url" value="git@github.com:Alifarid0011/shop.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2e3HvLIxiY7AtRpao50oJcp0Cdy" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showMembers" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "DefaultGoTemplateProperty": "Go File",
    "Docker.docker: Compose Deployment.executor": "Run",
    "Go Build.go build github.com/Alifarid0011/shop/src/cmd.executor": "Run",
    "Go Build.go build learn-gin/.executor": "Debug",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.automatic.dependencies.download": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "git-widget-placeholder": "<unknown>",
    "go.import.settings.migrated": "true",
    "last_opened_file_path": "/home/ali",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.pluginManager"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/../shop" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/src/cmd" />
      <recent name="$PROJECT_DIR$/src" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build github.com/Alifarid0011/shop/src/cmd">
    <configuration name="go build github.com/Alifarid0011/shop/src/cmd" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="learn-gin" />
      <working_directory value="$PROJECT_DIR$/../shop" />
      <kind value="PACKAGE" />
      <package value="github.com/Alifarid0011/shop/src/cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/../shop/src/cmd/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build learn-gin/" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="learn-gin" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="docker: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="sourceFilePath" value="../لهد/src/docker/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.docker: Compose Deployment" />
      <item itemvalue="Go Build.go build learn-gin/" />
      <item itemvalue="Go Build.go build github.com/Alifarid0011/shop/src/cmd" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build github.com/Alifarid0011/shop/src/cmd" />
        <item itemvalue="Docker.docker: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-2946fb9b3188-155fe4b6e3a0-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-233.14475.38" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/../shop/src/cmd/main.go</url>
          <line>4</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>